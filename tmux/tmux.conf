# tmux config file

# command descriptions: 
# https://man7.org/linux/man-pages/man1/tmux.1.html

# Session options are managed with `set` and `show`.
# Some flags:
# -g stands for global: set option for all sessions
# -u stands for unset, reverting to the default (-gu unsets global option)
# -o sets an option but throws an error if the option is already set
# Server options are managed with the -s flag, and window options with the -w flag

### key bindings ###


# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"
bind -n 'M-:' command # the -n option skips the prefix key

# move around panes easily
bind -n M-n select-pane -L
bind -n M-j select-pane -R
bind -n M-u select-pane -U
bind -n M-e select-pane -D
# bind -n C-i select-pane -R # removed because conflict with tab

# resize easily
bind -n M-N resize-pane -L 4
bind -n M-J resize-pane -R 4
bind -n M-U resize-pane -U 4
bind -n M-E resize-pane -D 4

## move around panes easily, be it tmux or nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# for zen mode
set-option -g allow-passthrough on

bind -n M-n if-shell "$is_vim" 'send-keys M-n' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind -n M-j if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind -n M-u if-shell "$is_vim" 'send-keys M-u' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind -n M-e if-shell "$is_vim" 'send-keys M-e' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }

## resize panes easily, be it tmux or nvim
bind -n M-N if-shell "$is_vim" 'send-keys M-N' 'resize-pane -L 5'
bind -n M-J if-shell "$is_vim" 'send-keys M-J' 'resize-pane -R 5'
bind -n M-U if-shell "$is_vim" 'send-keys M-U' 'resize-pane -U 5'
bind -n M-E if-shell "$is_vim" 'send-keys M-E' 'resize-pane -D 5'


# new pane in same directory
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-h split-window -v -c "#{pane_current_path}"
# bind -n C-h split-window -v -c "#{pane_current_path}"
# layouts
bind -n M-Space next-layout
# use 'select-layout -o' to undo the last layout change.

# better window managment
bind n new-window -c "#{pane_current_path}"
bind -n M-k next
bind S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# swap panes # disabled to loop through vim's history
# bind -n M-i swap-pane -D
# bind -n M-n swap-pane -U

# move between sessions
bind -n M-s switch-client -n

### options ###

set-option -g mouse on

# tmux-sensible
set -sg escape-time 5
set -g history-limit 50000
set -g display-time 4000
set -g status-interval 5
set -g default-terminal "screen-256color"
set -sa terminal-overrides ',screen-256color:RGB'

set -g status-keys emacs
set -g focus-events on

# start index for windows and panes
set -g base-index 1
set -g pane-base-index 1

# set active window styles and pane border style
set -g window-active-style 'fg=colour250,bg=black'
set -g pane-active-border-style 'fg=colour51'

# copy across ssh
set -g set-clipboard on

### plugins ###
# Setup plugins:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# how to ressurect other session:
# make sure you start this with a "fresh" tmux instance
# $ cd ~/.tmux/resurrect/
# locate the save file you'd like to use for restore (file names have a timestamp)
# symlink the last file to the desired save file: $ ln -sf <file_name> last
# do a restore with tmux-resurrect key: prefix + Ctrl-r
#


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
