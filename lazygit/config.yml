gui:
  # stuff relating to the UI
  scrollHeight: 2 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.3333 # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: "flexible" # one of 'horizontal' | 'flexible' | 'vertical'
  language: "auto" # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl' | 'ja'
  timeFormat: "02 Jan 06 15:04 MST" # https://pkg.go.dev/time#Time.Format
  theme:
    lightTheme: false # For terminals with a light background
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - white
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - blue # set to `default` to have no background colour
    selectedRangeBgColor:
      - blue
    cherryPickedCommitBgColor:
      - cyan
    cherryPickedCommitFgColor:
      - blue
    unstagedChangesColor:
      - red
  commitLength:
    show: true
  mouseEvents: true
  skipUnstageLineWarning: false
  skipStashWarning: false
  showFileTree: true # for rendering changes files in a tree format
  showListFooter: true # for seeing the '5 of 20' message in list panels
  showRandomTip: true
  showBottomLine: true # for hiding the bottom information line (unless it has important information to tell you)
  showCommandLog: true
  showIcons: false
  commandLogSize: 8
  splitDiff: "auto" # one of 'auto' | 'always'
git:
  paging:
    colorArg: always
    useConfig: false
  commit:
    signOff: false
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ""
  log:
    # one of date-order, author-date-order, topo-order.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: "topo-order"
    # one of always, never, when-maximised
    # this determines whether the git graph is rendered in the commits panel
    showGraph: "when-maximised"
  skipHookPrefix: WIP
  autoFetch: true
  autoRefresh: true
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false
  parseEmoji: false
  diffContextSize: 3 # how many lines of context are shown around a change in diffs
os:
  editCommand: "vim" # see 'Configuring File Editing' section
  editCommandTemplate: "{{editor}} +{{line}} -- {{filename}}"
  openCommand: ""
refresher:
  refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
  fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
reporting: "undetermined" # one of: 'on' | 'off' | 'undetermined'
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: "prompt" # one of: 'prompt' | 'create' | 'skip'
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
keybinding:
  universal:
    quit: "q"
    quit-alt1: "_" # alternative/alias of quit   ## default <c-c>
    return: "<esc>" # return to previous menu, will quit if there's nowhere to return
    quitWithoutChangingDirectory: "Q"
    togglePanel: "<tab>" # goto the next panel
    prevItem: "<up>" # go one line up
    nextItem: "<down>" # go one line down
    prevItem-alt: "u" # go one line up   ## default k
    nextItem-alt: "e" # go one line down   ## default j
    prevPage: "," # go to next page in list
    nextPage: "." # go to previous page in list
    gotoTop: "<" # go to top of list
    gotoBottom: ">" # go to bottom of list
    scrollLeft: "N" # scroll left within list view   ## default H
    scrollRight: "I" # scroll right within list view   ## default L
    prevBlock: "<left>" # goto the previous block / panel
    nextBlock: "<right>" # goto the next block / panel
    prevBlock-alt: "n" # goto the previous block / panel   ## default h
    nextBlock-alt: "i" # goto the next block / panel   ## default l
    jumpToBlock: ["1", "2", "3", "4", "5"] # goto the Nth block / panel
    nextMatch: "k" ## default n
    prevMatch: "K" ## default N
    optionMenu: "x" # show help menu
    optionMenu-alt1: "?" # show help menu
    select: "<space>"
    goInto: "<enter>"
    openRecentRepos: "<c-r>"
    confirm: "<enter>"
    confirm-alt1: "y"
    remove: "d"
    new: "k" ## default n
    edit: ";" ## default e
    openFile: "o"
    scrollUpMain: "<pgup>" # main panel scroll up
    scrollDownMain: "<pgdown>" # main panel scroll down
    scrollUpMain-alt1: "U" # main panel scroll up   ## default K
    scrollDownMain-alt1: "E" # main panel scroll down   ## default J
    scrollUpMain-alt2: "_" # main panel scroll up   ## default <c-u>
    scrollDownMain-alt2: "_" # main panel scroll down   ## default <c-d>
    executeCustomCommand: ":"
    createRebaseOptionsMenu: "m"
    pushFiles: "P"
    pullFiles: "p"
    refresh: "R"
    createPatchOptionsMenu: "<c-t>" ## default <c-p>
    nextTab: "]"
    prevTab: "["
    nextScreenMode: "+"
    prevScreenMode: "_"
    undo: "z"
    redo: "Z" ## default <c-z>
    filteringMenu: "<c-f>" ## default <c-s>
    diffingMenu: "W"
    diffingMenu-alt: "<c-e>" # deprecated
    copyToClipboard: "<c-c>" ## default <c-o>
    submitEditorText: "<enter>"
    appendNewline: "<a-enter>"
    extrasMenu: "@"
    toggleWhitespaceInDiffView: "H" ## default <c-w>
    increaseContextInDiffView: "}"
    decreaseContextInDiffView: "{"
  status:
    checkForUpdate: "l" ## default u
    recentRepos: "<enter>"
  files:
    commitChanges: "c"
    commitChangesWithoutHook: "w" # commit changes without pre-commit hook
    amendLastCommit: "A"
    commitChangesWithEditor: "C"
    ignoreFile: "h" ## default i
    refreshFiles: "r"
    stashAllChanges: "s"
    viewStashOptions: "S"
    toggleStagedAll: "a" # stage/unstage all
    viewResetOptions: "D"
    fetch: "f"
    toggleTreeView: "`"
  branches:
    createPullRequest: "o"
    viewPullRequestOptions: "O"
    checkoutBranchByName: "c"
    forceCheckoutBranch: "F"
    rebaseBranch: "r"
    mergeIntoCurrentBranch: "M"
    viewGitFlowOptions: "h" ## default i
    fastForward: "f" # fast-forward this branch from its upstream
    pushTag: "P"
    setUpstream: "l" # set as upstream of checked-out branch   ## default u
    fetchRemote: "f"
  commits:
    squashDown: "s"
    renameCommit: "r"
    renameCommitWithEditor: "R"
    viewResetOptions: "g"
    markCommitAsFixup: "f"
    createFixupCommit: "F" # create fixup commit for this commit
    squashAboveCommits: "S"
    moveDownCommit: "Y" # move commit down one ## default <c-j>
    moveUpCommit: "L" # move commit up one ## default <c-k>
    amendToCommit: "A"
    pickCommit: "p" # pick commit (when mid-rebase)
    revertCommit: "t"
    cherryPickCopy: "c"
    cherryPickCopyRange: "C"
    pasteCommits: "v"
    tagCommit: "T"
    checkoutCommit: "<space>"
    resetCherryPick: "<c-R>"
    copyCommitMessageToClipboard: "<c-y>"
    openLogMenu: "<c-l>"
    viewBisectOptions: "b"
  stash:
    popStash: "g"
  commitFiles:
    checkoutCommitFile: "c"
  main:
    toggleDragSelect: "v"
    toggleDragSelect-alt: "V"
    toggleSelectHunk: "a"
    pickBothHunks: "b"
  submodules:
    init: "h" ## default i
    update: "l" ## default u
    bulkMenu: "b"
